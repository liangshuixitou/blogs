{"meta":{"title":"l1hy�ĸ��˲���","subtitle":"","description":"","author":"l1hy","url":"https://liangshuixitou.github.io/blogs","root":"/blogs/"},"pages":[{"title":"友情链接","date":"2021-02-19T02:11:10.638Z","updated":"2021-02-19T02:11:10.638Z","comments":true,"path":"links/index.html","permalink":"https://liangshuixitou.github.io/blogs/links/index.html","excerpt":"","text":""},{"title":"404 Not Found：该页无法显示","date":"2021-02-20T00:32:01.423Z","updated":"2021-02-19T02:11:10.636Z","comments":false,"path":"/404.html","permalink":"https://liangshuixitou.github.io/blogs/404.html","excerpt":"","text":""},{"title":"关于","date":"2021-02-19T13:49:47.242Z","updated":"2021-02-19T13:49:47.242Z","comments":false,"path":"about/index.html","permalink":"https://liangshuixitou.github.io/blogs/about/index.html","excerpt":"","text":"南京航空航天大学"},{"title":"Repositories","date":"2021-02-19T02:11:10.638Z","updated":"2021-02-19T02:11:10.638Z","comments":false,"path":"repository/index.html","permalink":"https://liangshuixitou.github.io/blogs/repository/index.html","excerpt":"","text":""},{"title":"分类","date":"2021-02-19T02:11:10.638Z","updated":"2021-02-19T02:11:10.638Z","comments":false,"path":"categories/index.html","permalink":"https://liangshuixitou.github.io/blogs/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2021-02-19T02:11:10.639Z","updated":"2021-02-19T02:11:10.639Z","comments":false,"path":"tags/index.html","permalink":"https://liangshuixitou.github.io/blogs/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"1-两数之和","slug":"1-两数之和","date":"2021-02-21T13:55:51.000Z","updated":"2021-02-21T15:16:13.324Z","comments":true,"path":"2021/02/21/1-两数之和/","link":"","permalink":"https://liangshuixitou.github.io/blogs/2021/02/21/1-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/","excerpt":"","text":"[1]两数之和 题目描述 给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 的那 两个 整数，并返回它们的数组下标。 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。 你可以按任意顺序返回答案。 示例 1： 输入：nums = [2,7,11,15], target = 9 输出：[0,1] 解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。 示例 2： 输入：nums = [3,2,4], target = 6 输出：[1,2] 示例 3： 输入：nums = [3,3], target = 6 输出：[0,1] 题解： 1-暴力法 强行两次循环遍历数组即可 123456789101112131415161718class Solution &#123; public int[] twoSum(int[] nums, int target) &#123; if (nums == null || nums.length == 0 || nums.length == 1) &#123; return null; &#125; int[] result = new int[2]; for (int i = 0; i &lt; nums.length; ++i) &#123; result[0] = i; for (int j = 0; j &lt; nums.length; ++j) &#123; if (i != j &amp;&amp; nums[i] + nums[j] == target) &#123; result[1] = j; return result; &#125; &#125; &#125; return null; &#125;&#125; 2-哈希表 利用hashMap的O(1)查找，将时间降低到仅需遍历一次 1234567891011121314151617class Solution &#123; public int[] twoSum(int[] nums, int target) &#123; if (nums == null || nums.length == 0 || nums.length == 1) &#123; return null; &#125; Map&lt;Integer, Integer&gt; hashMap = new HashMap&lt;Integer, Integer&gt;(); for (int i = 0; i &lt; nums.length; ++i) &#123; if (hashMap.containsKey(target - nums[i])) &#123; return new int[]&#123;hashMap.get(target - nums[i]), i&#125;; &#125; hashMap.put(nums[i], i); &#125; return null; &#125;&#125;","categories":[{"name":"leetcode","slug":"leetcode","permalink":"https://liangshuixitou.github.io/blogs/categories/leetcode/"}],"tags":[{"name":"数组","slug":"数组","permalink":"https://liangshuixitou.github.io/blogs/tags/%E6%95%B0%E7%BB%84/"},{"name":"哈希表","slug":"哈希表","permalink":"https://liangshuixitou.github.io/blogs/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"},{"name":"easy","slug":"easy","permalink":"https://liangshuixitou.github.io/blogs/tags/easy/"}]},{"title":"Quick-start-Hexo","slug":"Quick-start","date":"2021-02-20T00:35:42.000Z","updated":"2021-02-20T01:39:08.731Z","comments":true,"path":"2021/02/20/Quick-start/","link":"","permalink":"https://liangshuixitou.github.io/blogs/2021/02/20/Quick-start/","excerpt":"","text":"快速开始Hexo 以本博客为例，简单介绍下如何利用Hexo和github的项目page搭建起个人博客(静态网站) Hexo简介 Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 hexo官网 中有着详细的关于hexo的介绍（文档，API，主题，插件） 安装Hexo 安装前提（安装教程在后续推出） node.js Git 采用安装Hexo脚手架 1$ npm install -g hexo-cli 对于linux用户可用下面的命令将Hexo命令添加到环境变量中，win用户手动添加即可（貌似安装的时候自动添加了） 1echo &#x27;PATH=&quot;$PATH:./node_modules/.bin&quot;&#x27; &gt;&gt; ~/.profile 建立博客目录 创建一个blogs的文件夹（存放所有的博客项目）然后执行下命令 123$ hexo init blog$ cd blog$ npm install 上述命令在blogs文件夹中创建了一个名为blog的博客项目 新建完成后，blog的目录如下： 12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes _config.yml 网站的 配置 信息，您可以在此配置大部分的参数。 themes 主题 文件夹。Hexo 会根据主题来生成静态页面。 创建一篇博文 1$ hexo new &quot;My New Post&quot; 在 source/_post 目录下创建一篇名为 My New Post 的 Markdown 文件，文件开头处可配置分类信息，tag 信息等 启动本地服务 12$ hexo server$ hexo s 启动服务器。默认情况下，访问网址为： http://localhost:4000/。 选项 描述 -p, --port 重设端口 -s, --static 只使用静态文件 -l, --log 启动日记记录，使用覆盖记录格式 生成静态文件 12$ hexo generate$ hexo g 生成静态文件。 选项 描述 -d, --deploy 文件生成后立即部署网站 -w, --watch 监视文件变动 -b, --bail 生成过程中如果发生任何未处理的异常则抛出异常 -f, --force 强制重新生成文件 Hexo 引入了差分机制，如果 public 目录存在，那么 hexo g 只会重新生成改动的文件。 使用该参数的效果接近 hexo clean &amp;&amp; hexo generate -c, --concurrency 最大同时生成文件的数量，默认无限制 部署到远程站点 12$ hexo deploy$ hexo d 部署网站。 参数 描述 -g, --generate 部署之前预先生成静态文件 清理 1$ hexo clean 清除缓存文件 (db.json) 和已生成的静态文件 (public)。 在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。","categories":[{"name":"环境搭建","slug":"环境搭建","permalink":"https://liangshuixitou.github.io/blogs/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://liangshuixitou.github.io/blogs/tags/Hexo/"},{"name":"Markdown","slug":"Markdown","permalink":"https://liangshuixitou.github.io/blogs/tags/Markdown/"}]}],"categories":[{"name":"leetcode","slug":"leetcode","permalink":"https://liangshuixitou.github.io/blogs/categories/leetcode/"},{"name":"环境搭建","slug":"环境搭建","permalink":"https://liangshuixitou.github.io/blogs/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"数组","slug":"数组","permalink":"https://liangshuixitou.github.io/blogs/tags/%E6%95%B0%E7%BB%84/"},{"name":"哈希表","slug":"哈希表","permalink":"https://liangshuixitou.github.io/blogs/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"},{"name":"easy","slug":"easy","permalink":"https://liangshuixitou.github.io/blogs/tags/easy/"},{"name":"Hexo","slug":"Hexo","permalink":"https://liangshuixitou.github.io/blogs/tags/Hexo/"},{"name":"Markdown","slug":"Markdown","permalink":"https://liangshuixitou.github.io/blogs/tags/Markdown/"}]}